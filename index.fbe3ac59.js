class t{constructor(){this.components=[]}getComponent(t){for(let e of this.components)// @ts-ignore
if(e instanceof t)return e}addComponents(...t){for(let e of t)this.components.push(e)}hasComponent(t){for(let e of this.components)// @ts-ignore
if(e instanceof t)return!0}removeComponent(t){this.components=this.components.filter(e=>e instanceof t)}draw(t,e,l){}}class e extends t{constructor(){super()}draw(t,e,l){t.beginPath(),t.fillStyle="#543",t.fillRect(e.x,e.y,l,l),t.fill(),t.closePath()}}class l extends t{constructor(){super()}draw(t,e,l){t.beginPath(),t.fillStyle="#000",t.fillRect(e.x,e.y,l,l),t.fill(),t.closePath()}}class s{constructor(t){this.drawPosition=t,this.components=[]}distanceTo(t){return Math.sqrt(Math.pow(this.drawPosition.x-t.drawPosition.x,2)+Math.pow(this.drawPosition.y-t.drawPosition.y,2))}getComponent(t){for(let e of this.components)// @ts-ignore
if(e instanceof t)return e}addComponents(...t){for(let e of t)this.components.push(e)}hasComponent(t){for(let e of this.components)// @ts-ignore
if(e instanceof t)return!0;return!1}removeComponent(t){this.components=this.components.filter(e=>e instanceof t)}draw(t){throw Error("Not implemented yet")}}class n extends s{constructor(t,e,l,s){super(s),this.x=t,this.y=e,this.size=l,this.entities=[]}getEntity(t){for(let e of this.entities)// @ts-ignore
if(e instanceof t)return e}addEntitys(...t){for(let e of t)this.entities.push(e)}hasEntity(t){for(let e of this.entities)// @ts-ignore
if(e instanceof t)return!0}removeEntity(t){this.entities=this.entities.filter(e=>!(e instanceof t))}draw(t){// draw the entities inside the cell
for(let e of(// draw the cell itself
t.beginPath(),t.strokeStyle="#000",t.strokeRect(this.drawPosition.x,this.drawPosition.y,this.size,this.size),t.stroke(),t.closePath(),this.entities))e.draw(t,this.drawPosition,this.size)}}class i{appliesTo(t){return!1}update(t,e,l){throw Error("not implemented")}draw(t){}}class o extends i{constructor(){super(),this.keys=new Set,document.addEventListener("keydown",t=>{switch(t.keyCode){case 87:this.keys.add("w");break;case 65:this.keys.add("a");break;case 83:this.keys.add("d");break;case 68:this.keys.add("s")}})}appliesTo(t){return t instanceof n}update(t,l,s){// @ts-ignore
let n=t.find(t=>t.getEntity(e));if(!n)return;let i=null;if(this.keys.has("w")&&(i=t.find(t=>t.x===n.x&&t.y===n.y-1),this.keys.delete("w")),this.keys.has("a")&&(i=t.find(t=>t.x===n.x-1&&t.y===n.y),this.keys.delete("a")),this.keys.has("s")&&(i=t.find(t=>t.x===n.x+1&&t.y===n.y),this.keys.delete("s")),this.keys.has("d")&&(i=t.find(t=>t.x===n.x&&t.y===n.y+1),this.keys.delete("d")),i){// @ts-ignore
let t=n.getEntity(e);if(!t)return;let l=new e;i.addEntitys(l),// @ts-ignore
n.removeEntity(e)}}}class a{constructor(){}}class r extends a{constructor(t,e){super(),this.x=t,this.y=e}magnitude(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2))}dot(t){return this.x*t.x+this.y*t.y}norm(){return{x:this.x/this.magnitude(),y:this.y/this.magnitude()}}normalize(){let t=this.norm();return new r(t.x,t.y)}}class h extends s{constructor(t){super(t),this.lifeLength=.5}draw(t){// draw intersection dot
t.fillStyle="red",t.beginPath(),t.arc(this.drawPosition.x,this.drawPosition.y,5,0,2*Math.PI),t.fill()}}class u{constructor(){this.bullets=[]}addBullets(...t){this.bullets.push(...t)}update(t,e,l){for(let t of(this.bullets=this.bullets.filter(t=>t.lifeLength>0),this.bullets)){let l=t.getComponent(r);l&&(t.drawPosition.x+=l.x*e,t.drawPosition.y+=l.y*e),t.lifeLength-=e}}draw(t){for(let e of this.bullets)e.draw(t)}}class y extends i{constructor(){super(),this.keys=new Set,this.mousePos=null,this.startPos=null,this.aimPos=null,this.nearestIntersection=null,this.bulletSystem=new u,document.querySelector("#gameScreen").addEventListener("click",t=>{this.keys.add("leftClick")}),document.querySelector("#gameScreen").addEventListener("mousemove",t=>{this.mousePos={x:t.offsetX,y:t.offsetY}})}appliesTo(t){return t instanceof n&&!!t.entities.find(t=>t instanceof l||t instanceof e)}update(t,s,n){let i=t.find(t=>t.entities.find(t=>t instanceof e));if(!i||(this.startPos={x:i.drawPosition.x+i.size/2,y:i.drawPosition.y+i.size/2},!this.mousePos))return;let o={x:this.mousePos.x-(i.drawPosition.x+i.size/2),y:this.mousePos.y-(i.drawPosition.y+i.size/2)},a=Math.sqrt(Math.pow(o.x,2)+Math.pow(o.y,2)),u={x:o.x/a,y:o.y/a},y={x:u.x*Math.sqrt(Math.pow(n.gameWidth,2)+Math.pow(n.gameHeight,2)),y:u.y*Math.sqrt(Math.pow(n.gameWidth,2)+Math.pow(n.gameHeight,2))};this.aimPos={x:this.startPos.x+y.x,y:this.startPos.y+y.y};let c=this.aimPos.x,p=this.aimPos.y,w=this.startPos.x,d=this.startPos.y,f={intersectionX:c,intersectionY:p},m=t.filter(t=>t.entities.find(t=>t instanceof l));// points for line (controlled by mouse)
for(let t of m){let e=t.drawPosition.x,l=t.drawPosition.y,s=t.size,n=t.size,i=this.lineRect(c,p,w,d,e,l,s,n);// square position
for(let t of i){let i=t.intersectionX-w,o=t.intersectionY-d,a=Math.sqrt(Math.pow(i,2)+Math.pow(o,2)),r=f.intersectionX-w,h=f.intersectionY-d,u=Math.sqrt(Math.pow(r,2)+Math.pow(h,2));a<u&&(f={intersectionX:t.intersectionX,intersectionY:t.intersectionY,intersectedRect:{sx:e,sy:l,sw:s,sh:n}});// ctx.fillStyle = "blue";
// ctx.beginPath();
// ctx.arc(
//   intersection.intersectionX,
//   intersection.intersectionY,
//   5,
//   0,
//   2 * Math.PI
// );
// ctx.fill();
}}if(this.nearestIntersection=f,this.keys.has("leftClick")){let t=new h({x:this.startPos.x,y:this.startPos.y});t.addComponents(new r(1e3*u.x,1e3*u.y)),this.bulletSystem.addBullets(t),this.keys.delete("leftClick")}let x=t.flatMap(t=>t.entities);this.bulletSystem.update(x,s,n)}draw(t){if(this.startPos&&this.aimPos&&(t.fillStyle="orange",t.beginPath(),t.arc(this.startPos.x,this.startPos.y,5,0,2*Math.PI),t.fill(),this.nearestIntersection)){if(this.nearestIntersection.intersectedRect){let{intersectedRect:e}=this.nearestIntersection;t.fillStyle="orange",t.fillRect(e.sx,e.sy,e.sw,e.sh)}t.save(),// draw the line
t.beginPath(),t.setLineDash([5,15]),t.moveTo(this.startPos.x,this.startPos.y),t.lineTo(this.nearestIntersection.intersectionX,this.nearestIntersection.intersectionY),t.stroke(),t.restore(),// draw intersection dot
t.fillStyle="red",t.beginPath(),t.arc(this.nearestIntersection.intersectionX,this.nearestIntersection.intersectionY,5,0,2*Math.PI),t.fill()}this.bulletSystem.draw(t)}lineRect(t,e,l,s,n,i,o,a){// check if the line has hit any of the rectangle's sides
// uses the Line/Line function below
let r=this.lineLine(t,e,l,s,n,i,n,i+a),h=this.lineLine(t,e,l,s,n+o,i,n+o,i+a),u=this.lineLine(t,e,l,s,n,i,n+o,i),y=this.lineLine(t,e,l,s,n,i+a,n+o,i+a),c=[];return r&&c.push(r),h&&c.push(h),u&&c.push(u),y&&c.push(y),c}lineLine(t,e,l,s,n,i,o,a){// calculate the direction of the lines
let r=((o-n)*(e-i)-(a-i)*(t-n))/((a-i)*(l-t)-(o-n)*(s-e)),h=((l-t)*(e-i)-(s-e)*(t-n))/((a-i)*(l-t)-(o-n)*(s-e));return(// if uA and uB are between 0-1, lines are colliding
r>=0&&r<=1&&h>=0&&h<=1?{intersectionX:t+r*(l-t),intersectionY:e+r*(s-e)}:null)}}class c{constructor(t){this.structure=t,this.systems=[new y,new o],this.cells=[],this.offsetX=0,this.offsetY=0}buildLevel(t,s){let i=[],o=this.structure[0].length,a=this.structure.length;for(let t of this.structure)if(t.length!==o)throw Error("Not all rows in level structure have the same size");let r=0;if(t/s<o/a?(r=t/o,this.offsetX=0,this.offsetY=(s-r*a)/2):(r=s/a,this.offsetX=(t-r*o)/2,this.offsetY=0),r<=0)throw Error("Cell size less than 0");this.structure.forEach((t,s)=>{t.forEach((t,o)=>{let a={x:o,y:s},h=new n(a.x,a.y,r,{x:r*a.x+this.offsetX,y:r*a.y+this.offsetY});if(null!==t)for(let s of t)switch(s.type){case"player":h.addEntitys(new e);break;case"wall":h.addEntitys(new l);break;default:throw Error("Invalid entity type")}i.push(h)})}),this.cells=i}update(t,e){for(let l of this.systems){let s=this.cells.filter(l.appliesTo);l.update(s,t,e)}}draw(t){for(let e of this.cells)e.draw(t);for(let e of this.systems)e.draw(t)}}class p extends c{constructor(){super([[[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}]],[[{type:"wall"}],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[{type:"wall"}]],[[{type:"wall"}],null,null,[{type:"wall"}],null,null,null,null,null,null,null,null,null,[{type:"wall"}],null,null,[{type:"wall"}]],[[{type:"wall"}],null,null,[{type:"wall"}],null,null,[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],null,null,[{type:"wall"}],null,null,[{type:"wall"}]],[[{type:"wall"}],null,null,[{type:"wall"}],null,null,null,null,null,null,null,null,null,[{type:"wall"}],null,null,[{type:"wall"}]],[[{type:"wall"}],null,null,[{type:"wall"}],null,null,null,null,null,null,null,null,null,[{type:"wall"}],null,null,[{type:"wall"}]],[[{type:"wall"}],null,null,[{type:"wall"}],null,null,[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],null,null,[{type:"wall"}],null,null,[{type:"wall"}]],[[{type:"wall"}],null,null,[{type:"wall"}],null,null,null,null,null,null,null,null,null,[{type:"wall"}],null,null,[{type:"wall"}]],[[{type:"wall"}],null,null,null,null,null,null,null,[{type:"player"}],null,null,null,null,null,null,null,[{type:"wall"}]],[[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}],[{type:"wall"}]]])}}const w=document.querySelector("#gameScreen"),d=w.getContext("2d");w.width=1280,w.height=960;const f=new class{constructor(t,e,l){this.gameWidth=t,this.gameHeight=e,this.ctx=l,this.level=new p,this.systems=[],this.entities=[],this.start()}start(){this.level.buildLevel(this.gameWidth,this.gameHeight)}draw(t){for(let e of(this.level.draw(t),this.systems))e.draw(t)}update(t){for(let e of(this.level.update(t,this),this.systems)){let l=this.entities.filter(e.appliesTo);e.update(l,t,this)}}}(1280,960,d);let m=0;requestAnimationFrame(function t(e){// dt i sekunder
let l=(e-m)/1e3;m=e,d.clearRect(0,0,1280,960),f.update(l),f.draw(d),requestAnimationFrame(t)});