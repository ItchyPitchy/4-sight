{"mappings":"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BAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YAClE;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-da3920534d4ab767.js","src/main.ts","src/game.ts","src/Level/Level1.ts","src/Level/Level.ts","src/System/CollisionSystem.ts","src/System/System.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/Component/Hitbox.ts","src/Component/Component.ts","src/Component/Vector.ts","src/Component/CircleHitbox.ts","src/Component/RectHitbox.ts","src/System/MoveSystem.ts","src/System/PlayerSystem.ts","src/Entity/Player1.ts","src/Entity/Entity.ts","src/System/ShootSystem.ts","src/Entity/Bullet.ts","src/System/LightsourceSystem.ts","src/Entity/Wall.ts","src/Entity/Cell.ts","src/Component/LightSource.ts","src/rectangle.ts","src/point.ts","src/segment.ts","src/end-point.ts","src/load-map.ts","src/visibility.ts","src/line-intersection.ts","src/endpoint-compare.ts","src/segment-in-front-of.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"7dd44675b7a05eb9\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import Game from \"./game\";\n\nconst mainCanvas = document.querySelector(\"#gameScreen\") as HTMLCanvasElement;\nconst mainCtx = mainCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\nconst shadowCanvas = document.querySelector(\n  \"#shadowCanvas\"\n) as HTMLCanvasElement;\nconst shadowCtx = shadowCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\nconst sightCanvas = document.querySelector(\"#sightCanvas\") as HTMLCanvasElement;\nconst sightCtx = sightCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\n// ctx.imageSmoothingEnabled = true;\n// ctx.imageSmoothingQuality = \"high\";\n\nconst GAME_WIDTH = window.innerWidth;\nconst GAME_HEIGHT = window.innerHeight;\n\nmainCanvas.width = GAME_WIDTH;\nmainCanvas.height = GAME_HEIGHT;\nshadowCanvas.width = GAME_WIDTH;\nshadowCanvas.height = GAME_HEIGHT;\nsightCanvas.width = GAME_WIDTH;\nsightCanvas.height = GAME_HEIGHT;\n\nconst game = new Game(GAME_WIDTH, GAME_HEIGHT, mainCtx, shadowCtx, sightCtx);\n\nlet oldTimeStamp: number = 0;\n\nfunction gameLoop(timestamp: number) {\n  // dt i sekunder\n  let dt = (timestamp - oldTimeStamp) / 1000;\n  oldTimeStamp = timestamp;\n\n  mainCtx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n  shadowCtx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n  sightCtx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n\n  game.update(dt);\n  game.draw(mainCtx, shadowCtx, sightCtx);\n\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n","import { Level1 } from \"./Level/Level1\";\nimport Entity from \"./Entity/Entity\";\n\nexport default class Game {\n  level = new Level1();\n  entities: Entity[] = [];\n  keys = new Set<\"leftClick\">();\n  mousePos: { x: number; y: number } | null = null;\n\n  constructor(\n    readonly gameWidth: number,\n    readonly gameHeight: number,\n    readonly mainCtx: CanvasRenderingContext2D,\n    readonly shadowCtx: CanvasRenderingContext2D,\n    readonly sightCtx: CanvasRenderingContext2D\n  ) {\n    (\n      document.querySelector(\"#gameScreen\") as HTMLCanvasElement\n    ).addEventListener(\"click\", (e) => {\n      this.keys.add(\"leftClick\");\n    });\n\n    // (\n    //   document.querySelector(\"#gameScreen\") as HTMLCanvasElement\n    // ).addEventListener(\"mouseup\", (e) => {\n    //   this.keys.delete(\"leftClick\");\n    // });\n\n    (\n      document.querySelector(\"#gameScreen\") as HTMLCanvasElement\n    ).addEventListener(\"mousemove\", (e) => {\n      this.mousePos = {\n        x: e.offsetX,\n        y: e.offsetY,\n      };\n    });\n\n    this.start();\n  }\n\n  start() {\n    this.level.buildLevel(this.gameWidth, this.gameHeight);\n  }\n\n  update(dt: number) {\n    this.level.update(dt, this);\n  }\n\n  draw(\n    mainCtx: CanvasRenderingContext2D,\n    shadowCtx: CanvasRenderingContext2D,\n    sightCtx: CanvasRenderingContext2D\n  ) {\n    this.level.draw(mainCtx, shadowCtx, sightCtx);\n  }\n}\n","import { Level } from \"./Level\";\n\nexport class Level1 extends Level {\n  constructor() {\n    const structure = [\n      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1],\n      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    ];\n\n    super(structure);\n  }\n}\n","import Game from \"../game\";\nimport { CollisionSystem } from \"../System/CollisionSystem\";\nimport MoveSystem from \"../System/MoveSystem\";\nimport PlayerSystem from \"../System/PlayerSystem\";\nimport { ShootSystem } from \"../System/ShootSystem\";\nimport { System } from \"../System/System\";\nimport LightsourceSystem from \"../System/LightsourceSystem\";\nimport Cell from \"../Entity/Cell\";\nimport Entity from \"../Entity/Entity\";\nimport { Player1 } from \"../Entity/Player1\";\nimport Wall from \"../Entity/Wall\";\nimport RectHitbox from \"../Component/RectHitbox\";\nimport CircleHitbox from \"../Component/CircleHitbox\";\nimport LightSource from \"../Component/LightSource\";\n\nexport class Level {\n  systems: System[] = [\n    new PlayerSystem(),\n    new MoveSystem(),\n    new CollisionSystem(),\n  ];\n  shadowSystem = new LightsourceSystem();\n  ShootSystem = new ShootSystem();\n  entities: Entity[] = [];\n  offsetX = 0;\n  offsetY = 0;\n\n  constructor(readonly structure: Array<Array<number>>) {}\n\n  buildLevel(gameWidth: number, gameHeight: number) {\n    const entities: Entity[] = [];\n    const rowLength = this.structure[0].length;\n    const columnLength = this.structure.length;\n\n    for (const row of this.structure) {\n      if (row.length !== rowLength)\n        throw new Error(\"Not all rows in level structure have the same size\");\n    }\n\n    const gameWidthHeightRatio = gameWidth / gameHeight;\n    const levelWidthHeightRatio = rowLength / columnLength;\n\n    let cellSize = 0;\n\n    if (gameWidthHeightRatio < levelWidthHeightRatio) {\n      cellSize = gameWidth / rowLength;\n      this.offsetX = 0;\n      this.offsetY = (gameHeight - cellSize * columnLength) / 2;\n    } else {\n      cellSize = gameHeight / columnLength;\n      this.offsetX = (gameWidth - cellSize * rowLength) / 2;\n      this.offsetY = 0;\n    }\n\n    if (cellSize <= 0) {\n      throw new Error(\"Cell size less than 0\");\n    }\n\n    this.structure.forEach((row, rowIndex) => {\n      row.forEach((rowColumn, rowColumnIndex) => {\n        const index = {\n          x: rowColumnIndex,\n          y: rowIndex,\n        };\n\n        entities.push(\n          new Cell(\n            {\n              x: cellSize * index.x + this.offsetX,\n              y: cellSize * index.y + this.offsetY,\n            },\n            { width: cellSize, height: cellSize }\n          )\n        );\n\n        switch (rowColumn) {\n          case 1: {\n            const wall = new Wall(\n              {\n                x: cellSize * index.x + this.offsetX,\n                y: cellSize * index.y + this.offsetY,\n              },\n              { width: cellSize, height: cellSize }\n            );\n            wall.addComponents(new RectHitbox());\n            entities.push(wall);\n            break;\n          }\n          case 3: {\n            const player = new Player1(\n              {\n                x: cellSize * index.x + this.offsetX,\n                y: cellSize * index.y + this.offsetY,\n              },\n              { width: cellSize, height: cellSize }\n            );\n            player.addComponents(new CircleHitbox(), new LightSource());\n            entities.push(player);\n            break;\n          }\n          default:\n            break;\n        }\n      });\n    });\n\n    this.entities = entities;\n  }\n\n  update(dt: number, game: Game) {\n    for (const system of [\n      ...this.systems,\n      this.shadowSystem,\n      this.ShootSystem,\n    ]) {\n      const filteredCells = this.entities.filter(system.appliesTo);\n      system.update(filteredCells, dt, this, game);\n    }\n  }\n\n  draw(\n    mainCtx: CanvasRenderingContext2D,\n    shadowCtx: CanvasRenderingContext2D,\n    sightCtx: CanvasRenderingContext2D\n  ) {\n    for (const entity of this.entities) {\n      entity.draw(mainCtx);\n    }\n\n    for (const system of this.systems) {\n      system.draw(mainCtx);\n    }\n\n    this.shadowSystem.draw(shadowCtx);\n    this.ShootSystem.draw(sightCtx);\n  }\n}\n","import { Level } from \"../Level/Level.js\";\nimport { System } from \"./System.js\";\nimport Entity from \"../Entity/Entity.js\";\nimport { Hitbox } from \"../Component/Hitbox.js\";\nimport { Vector } from \"../Component/Vector.js\";\nimport CircleHitbox from \"../Component/CircleHitbox.js\";\nimport RectHitbox from \"../Component/RectHitbox.js\";\n\nexport class CollisionSystem extends System {\n  constructor() {\n    super();\n  }\n\n  appliesTo(entity: Entity) {\n    return entity.hasComponent(Hitbox);\n  }\n\n  update(entities: Entity[], dt: number, level: Level) {\n    for (const entity1 of entities) {\n      for (const entity2 of entities) {\n        if (entity1 === entity2) continue;\n\n        if (\n          (entity1.hasComponent(CircleHitbox) &&\n            entity2.hasComponent(RectHitbox)) ||\n          (entity1.hasComponent(RectHitbox) &&\n            entity2.hasComponent(CircleHitbox))\n        ) {\n          const entityWithCircleHitbox = entity1.hasComponent(CircleHitbox)\n            ? entity1\n            : entity2.hasComponent(CircleHitbox)\n            ? entity2\n            : null;\n          const entityWithRectHitbox = entity1.hasComponent(RectHitbox)\n            ? entity1\n            : entity2.hasComponent(RectHitbox)\n            ? entity2\n            : null;\n\n          if (!entityWithCircleHitbox || !entityWithRectHitbox) {\n            throw new Error(\n              \"Not exactly one point- and one rectangle shaped entity hitbox (should not happen)\"\n            );\n          }\n\n          const collision = this.circleRectangleCollision(\n            entityWithCircleHitbox,\n            entityWithRectHitbox\n          );\n\n          if (collision) {\n            console.log(collision);\n            this.resolveCircleRectCollision(\n              entityWithCircleHitbox,\n              entityWithRectHitbox\n            );\n          }\n        }\n      }\n    }\n  }\n\n  // pointRectangleCollision(circleEntity: Entity, rectEntity: Entity) {\n  //   const cx = circleEntity.position.x; // point position\n  //   const cy = circleEntity.position.y;\n\n  //   const rx = rectEntity.position.x; // rectangle position\n  //   const ry = rectEntity.position.y;\n  //   const rw = rectEntity.size.width; // and dimensions\n  //   const rh = rectEntity.size.height;\n\n  //   // is the point inside the rectangle's bounds?\n  //   if (\n  //     cx >= rx && // left edge\n  //     cx <= rx + rw && // right edge\n  //     cy >= ry && // top edge\n  //     cy <= ry + rh // bottom edge\n  //   ) {\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  // resolvePointRectangleCollision(pointEntity: Entity, rectEntity: Entity) {\n  //   const px = pointEntity.position.x; // point position\n  //   const py = pointEntity.position.y;\n\n  //   const rx = rectEntity.position.x; // rectangle position\n  //   const ry = rectEntity.position.y;\n  //   const rw = rectEntity.size.width; // and dimensions\n  //   const rh = rectEntity.size.height;\n\n  //   // Expects that point entity has vector but not rectangle entity\n  //   const leftOffset = px - rx;\n  //   const rightOffset = rx + rw - px;\n  //   const topOffset = py - ry;\n  //   const bottomOffset = ry + rh - py;\n\n  //   const pointEntityVector = pointEntity.getComponent(Vector) as Vector;\n\n  //   if (pointEntityVector) {\n  //     if (leftOffset < topOffset && leftOffset < bottomOffset && pointEntityVector.x > 0) {\n  //       pointEntityVector.x = -pointEntityVector.x\n  //     } else if (rightOffset < topOffset && rightOffset < bottomOffset && pointEntityVector.x < 0) {\n  //       pointEntityVector.y = -pointEntityVector.x\n  //     } else if (topOffset < leftOffset && topOffset < rightOffset && pointEntityVector.y > 0) {\n  //       pointEntityVector.y = -pointEntityVector.y\n  //     } else if (bottomOffset < leftOffset && bottomOffset < rightOffset && pointEntityVector.y < 0) {\n  //       pointEntityVector.y = -pointEntityVector.y\n  //     }\n  //   }\n  // }\n\n  circleRectangleCollision(\n    entityWithCircleHitbox: Entity,\n    entityWithRectHitbox: Entity\n  ) {\n    const cx = entityWithCircleHitbox.position.x;\n    const cy = entityWithCircleHitbox.position.y;\n    const rx = entityWithRectHitbox.position.x;\n    const ry = entityWithRectHitbox.position.y;\n    const rw = entityWithRectHitbox.size.width;\n    const rh = entityWithRectHitbox.size.height;\n\n    let closestEdgeX = cx;\n    let closestEdgeY = cy;\n\n    if (cx < rx) closestEdgeX = rx; // left edge\n    else if (cx > rx + rw) closestEdgeX = rx + rw; // right edge\n\n    if (cy < ry) closestEdgeY = ry; // top edge\n    else if (cy > ry + rh) closestEdgeY = ry + rh; // bottom edge\n\n    const distX = cx - closestEdgeX;\n    const distY = cy - closestEdgeY;\n    const distance = Math.sqrt(distX * distX + distY * distY);\n\n    if (distance <= entityWithCircleHitbox.size.width / 2) {\n      return true;\n    }\n\n    return false;\n  }\n\n  resolveCircleRectCollision(\n    entityWithCircleHitbox: Entity,\n    entityWithRectHitbox: Entity\n  ) {\n    const cx = entityWithCircleHitbox.position.x;\n    const cy = entityWithCircleHitbox.position.y;\n    const rx = entityWithRectHitbox.position.x;\n    const ry = entityWithRectHitbox.position.y;\n    const rw = entityWithRectHitbox.size.width;\n    const rh = entityWithRectHitbox.size.height;\n\n    // Expects that point entity has vector but not rectangle entity\n    const leftOffset = cx - rx;\n    const rightOffset = rx + rw - cx;\n    const topOffset = cy - ry;\n    const bottomOffset = ry + rh - cy;\n\n    const circleEntityVector = entityWithCircleHitbox.getComponent(Vector) as\n      | Vector\n      | undefined;\n\n    if (circleEntityVector) {\n      if (\n        leftOffset < topOffset &&\n        leftOffset < bottomOffset &&\n        circleEntityVector.x > 0\n      ) {\n        entityWithCircleHitbox.position.x =\n          entityWithRectHitbox.position.x -\n          entityWithCircleHitbox.size.width / 2;\n        circleEntityVector.x = -circleEntityVector.x;\n      } else if (\n        rightOffset < topOffset &&\n        rightOffset < bottomOffset &&\n        circleEntityVector.x < 0\n      ) {\n        entityWithCircleHitbox.position.x =\n          entityWithRectHitbox.position.x +\n          entityWithRectHitbox.size.width +\n          entityWithCircleHitbox.size.width / 2;\n        circleEntityVector.x = -circleEntityVector.x;\n      } else if (\n        topOffset < leftOffset &&\n        topOffset < rightOffset &&\n        circleEntityVector.y > 0\n      ) {\n        entityWithCircleHitbox.position.y =\n          entityWithRectHitbox.position.y -\n          entityWithCircleHitbox.size.height / 2;\n        circleEntityVector.y = -circleEntityVector.y;\n      } else if (\n        bottomOffset < leftOffset &&\n        bottomOffset < rightOffset &&\n        circleEntityVector.y < 0\n      ) {\n        entityWithCircleHitbox.position.y =\n          entityWithRectHitbox.position.y +\n          entityWithRectHitbox.size.height +\n          entityWithCircleHitbox.size.height / 2;\n        circleEntityVector.y = -circleEntityVector.y;\n      }\n    } else {\n      if (leftOffset < topOffset && leftOffset < bottomOffset) {\n        entityWithCircleHitbox.position.x =\n          entityWithRectHitbox.position.x -\n          entityWithCircleHitbox.size.width / 2;\n      } else if (rightOffset < topOffset && rightOffset < bottomOffset) {\n        entityWithCircleHitbox.position.x =\n          entityWithRectHitbox.position.x +\n          entityWithRectHitbox.size.width +\n          entityWithCircleHitbox.size.width / 2;\n      } else if (topOffset < leftOffset && topOffset < rightOffset) {\n        entityWithCircleHitbox.position.y =\n          entityWithRectHitbox.position.y -\n          entityWithCircleHitbox.size.height / 2;\n      } else if (bottomOffset < leftOffset && bottomOffset < rightOffset) {\n        entityWithCircleHitbox.position.y =\n          entityWithRectHitbox.position.y +\n          entityWithRectHitbox.size.height +\n          entityWithCircleHitbox.size.height / 2;\n      }\n    }\n  }\n}\n","import Game from \"../game\";\nimport { Level } from \"../Level/Level\";\nimport Entity from \"../Entity/Entity\";\n\nexport class System {\n  appliesTo(entity: Entity) {\n    return false;\n  }\n\n  update(entities: Entity[], dt: number, level: Level, game: Game) {\n    throw new Error(\"not implemented\");\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {}\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import Component from \"./Component\";\n\nexport class Hitbox extends Component {\n  constructor() {\n    super();\n  }\n}\n","export default class Component {\n  constructor() {}\n}\n","import Component from \"./Component\";\n\nexport class Vector extends Component {\n  constructor(public x: number, public y: number) {\n    super();\n  }\n\n  magnitude() {\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n  }\n\n  dot(vector: Vector) {\n    return this.x * vector.x + this.y * vector.y;\n  }\n\n  norm() {\n    return {\n      x: this.x / this.magnitude(),\n      y: this.y / this.magnitude(),\n    };\n  }\n\n  normalize() {\n    const norm = this.norm();\n\n    return new Vector(norm.x, norm.y);\n  }\n}\n","import { Hitbox } from \"./Hitbox\";\n\nexport default class CircleHitbox extends Hitbox {\n  constructor() {\n    super()\n  }\n}","import { Hitbox } from \"./Hitbox\";\n\nexport default class RectHitbox extends Hitbox {\n  constructor() {\n    super()\n  }\n}","import { Level } from \"../Level/Level\";\nimport { System } from \"./System\";\nimport Entity from \"../Entity/Entity\";\nimport { Vector } from \"../Component/Vector\";\n\nexport default class MoveSystem extends System {\n  constructor() {\n    super();\n  }\n\n  appliesTo(entity: Entity) {\n    return entity.hasComponent(Vector);\n  }\n\n  update(entities: Entity[], dt: number, level: Level) {\n    for (const entity of entities) {\n      const vector = entity.getComponent(Vector) as Vector;\n\n      entity.position.x += vector.x * dt;\n      entity.position.y += vector.y * dt;\n    }\n  }\n}\n","import Game from \"../game\";\nimport { Level } from \"../Level/Level\";\nimport { System } from \"./System\";\nimport Entity from \"../Entity/Entity\";\nimport { Player1 } from \"../Entity/Player1\";\n\nexport default class PlayerSystem extends System {\n  keys = new Set<\"w\" | \"a\" | \"s\" | \"d\">();\n\n  constructor() {\n    super();\n\n    document.addEventListener(\"keydown\", (e) => {\n      switch (e.keyCode) {\n        case 87:\n          this.keys.add(\"w\");\n          break;\n        case 65:\n          this.keys.add(\"a\");\n          break;\n        case 83:\n          this.keys.add(\"s\");\n          break;\n        case 68:\n          this.keys.add(\"d\");\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", (e) => {\n      switch (e.keyCode) {\n        case 87:\n          this.keys.delete(\"w\");\n          break;\n        case 65:\n          this.keys.delete(\"a\");\n          break;\n        case 83:\n          this.keys.delete(\"s\");\n          break;\n        case 68:\n          this.keys.delete(\"d\");\n          break;\n      }\n    });\n  }\n\n  appliesTo(entity: Entity) {\n    return entity instanceof Player1;\n  }\n\n  update(entities: Player1[], dt: number, level: Level, game: Game) {\n    // const playerCell = entities.find((cell) => cell.getEntity(Player1));\n\n    // if (!playerCell) return;\n\n    // let moveToCell: Cell | undefined | null = null;\n\n    for (const entity of entities) {\n      if (this.keys.has(\"w\")) {\n        entity.position.y -= 10;\n      }\n\n      if (this.keys.has(\"a\")) {\n        entity.position.x -= 10;\n      }\n\n      if (this.keys.has(\"s\")) {\n        entity.position.y += 10;\n      }\n\n      if (this.keys.has(\"d\")) {\n        entity.position.x += 10;\n      }\n    }\n\n    // if (this.keys.has(\"w\")) {\n    //   moveToCell = entities.find(\n    //     (cell) => cell.x === playerCell.x && cell.y === playerCell.y - 1\n    //   );\n\n    //   this.keys.delete(\"w\");\n    // }\n\n    // if (this.keys.has(\"a\")) {\n    //   moveToCell = entities.find(\n    //     (cell) => cell.x === playerCell.x - 1 && cell.y === playerCell.y\n    //   );\n\n    //   this.keys.delete(\"a\");\n    // }\n\n    // if (this.keys.has(\"s\")) {\n    //   moveToCell = entities.find(\n    //     (cell) => cell.x === playerCell.x + 1 && cell.y === playerCell.y\n    //   );\n\n    //   this.keys.delete(\"s\");\n    // }\n\n    // if (this.keys.has(\"d\")) {\n    //   moveToCell = entities.find(\n    //     (cell) => cell.x === playerCell.x && cell.y === playerCell.y + 1\n    //   );\n\n    //   this.keys.delete(\"d\");\n    // }\n\n    // if (moveToCell) {\n    //   // @ts-ignore\n    //   const player = playerCell.getEntity(Player1);\n\n    //   if (!player) return;\n\n    //   const newPlayerInstance = new Player1();\n\n    //   moveToCell.addEntitys(newPlayerInstance);\n\n    //   // @ts-ignore\n    //   playerCell.removeEntity(Player1);\n    // }\n  }\n}\n","import Entity from \"./Entity\";\n\nexport class Player1 extends Entity {\n  constructor(\n    position: { x: number; y: number },\n    size: { width: number; height: number }\n  ) {\n    super(position, size);\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    ctx.save();\n\n    ctx.fillStyle = \"#543\";\n    ctx.beginPath();\n    ctx.arc(\n      this.position.x,\n      this.position.y,\n      this.size.width / 2,\n      0,\n      2 * Math.PI\n    );\n    ctx.fill();\n\n    ctx.restore();\n  }\n}\n","import Component from \"../Component/Component\";\n\nexport default class Entity {\n  components: Component[] = [];\n\n  constructor(\n    public position: { x: number; y: number },\n    public size: { width: number, height: number }\n  ) {}\n\n  distanceTo(entity: Entity) {\n    return Math.sqrt(\n      Math.pow(this.position.x - entity.position.x, 2) +\n        Math.pow(this.position.y - entity.position.y, 2)\n    );\n  }\n\n  getComponent(type: Component) {\n    for (const component of this.components) {\n      // @ts-ignore\n      if (component instanceof type) {\n        // @ts-ignore\n        return component;\n      }\n    }\n  }\n\n  addComponents(...components: Component[]) {\n    for (const component of components) {\n      this.components.push(component);\n    }\n  }\n\n  hasComponent<T extends Component>(type: T) {\n    for (const component of this.components) {\n      // @ts-ignore\n      if (component instanceof type) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  removeComponent<T extends Component>(type: T) {\n    this.components = this.components.filter(\n      // @ts-ignore\n      (component) => component instanceof type\n    );\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    throw new Error(\"Not implemented yet\");\n  }\n}\n","import Game from \"../game\";\nimport { Level } from \"../Level/Level\";\nimport { System } from \"./System\";\nimport Bullet from \"../Entity/Bullet\";\nimport Entity from \"../Entity/Entity\";\nimport { Player1 } from \"../Entity/Player1\";\nimport { Vector } from \"../Component/Vector\";\nimport CircleHitbox from \"../Component/CircleHitbox\";\nimport RectHitbox from \"../Component/RectHitbox\";\n\nexport class ShootSystem extends System {\n  gameWidth: number = 0;\n  gameHeight: number = 0;\n  startPos: { x: number; y: number } | null = null;\n  aimPos: { x: number; y: number } | null = null;\n  nearestIntersection: {\n    intersectionX: number;\n    intersectionY: number;\n    intersectedRect?: {\n      sx: number;\n      sy: number;\n      sw: number;\n      sh: number;\n    };\n  } | null = null;\n\n  constructor() {\n    super();\n  }\n\n  appliesTo(entity: Entity) {\n    return entity instanceof Entity;\n  }\n\n  update(entities: Entity[], dt: number, level: Level, game: Game) {\n    if (game.gameWidth) this.gameWidth = game.gameWidth;\n    if (game.gameHeight) this.gameHeight = game.gameHeight;\n\n    const players = entities.filter((entity) => entity instanceof Player1);\n\n    // if (!players) return;\n\n    for (const player of players) {\n      const playerCenter = {\n        x: player.position.x, // + player.size.width / 2,\n        y: player.position.y, // + player.size.height / 2,\n      };\n\n      if (!game.mousePos) return null;\n\n      this.startPos = {\n        x:\n          playerCenter.x +\n          (player.size.width / 2) *\n            Math.cos(this.getDegrees(player.position, game.mousePos)),\n        y:\n          playerCenter.y +\n          (player.size.height / 2) *\n            Math.sin(this.getDegrees(player.position, game.mousePos)),\n      };\n\n      if (!game.mousePos) return;\n\n      const vector = {\n        x: game.mousePos.x - player.position.x,\n        y: game.mousePos.y - player.position.y,\n      };\n      const mousePosBasedMagnitude = Math.sqrt(\n        Math.pow(vector.x, 2) + Math.pow(vector.y, 2)\n      );\n      const norm = {\n        x: vector.x / mousePosBasedMagnitude,\n        y: vector.y / mousePosBasedMagnitude,\n      };\n\n      const magnitude = {\n        x:\n          norm.x *\n          Math.sqrt(Math.pow(game.gameWidth, 2) + Math.pow(game.gameHeight, 2)),\n        y:\n          norm.y *\n          Math.sqrt(Math.pow(game.gameWidth, 2) + Math.pow(game.gameHeight, 2)),\n      };\n\n      this.aimPos = {\n        x: this.startPos.x + magnitude.x,\n        y: this.startPos.y + magnitude.y,\n      };\n\n      const x1: number = this.aimPos.x; // points for line (controlled by mouse)\n      const y1: number = this.aimPos.y;\n      const x2: number = this.startPos.x; // static point\n      const y2: number = this.startPos.y;\n\n      let nearestIntersection: {\n        intersectionX: number;\n        intersectionY: number;\n        intersectedRect?: {\n          sx: number;\n          sy: number;\n          sw: number;\n          sh: number;\n        };\n      } = {\n        intersectionX: x1,\n        intersectionY: y1,\n      };\n\n      const obstacles = entities.filter((entity) =>\n        entity.hasComponent(RectHitbox)\n      );\n\n      for (const obstacle of obstacles) {\n        const sx = obstacle.position.x; // square position\n        const sy = obstacle.position.y;\n        const sw = obstacle.size.width; // and size\n        const sh = obstacle.size.height;\n\n        // check if line has hit the square\n        // if so, change the fill color\n        const intersections = this.lineRect(x1, y1, x2, y2, sx, sy, sw, sh);\n\n        for (const intersection of intersections) {\n          const intersectionDistanceX = intersection.intersectionX - x2;\n          const intersectionDistanceY = intersection.intersectionY - y2;\n          const intersectionDistance = Math.sqrt(\n            Math.pow(intersectionDistanceX, 2) +\n              Math.pow(intersectionDistanceY, 2)\n          );\n\n          const nearestIntersectionDistanceX =\n            nearestIntersection.intersectionX - x2;\n          const nearestIntersectionDistanceY =\n            nearestIntersection.intersectionY - y2;\n          const nearestIntersectionDistance = Math.sqrt(\n            Math.pow(nearestIntersectionDistanceX, 2) +\n              Math.pow(nearestIntersectionDistanceY, 2)\n          );\n\n          if (intersectionDistance < nearestIntersectionDistance) {\n            nearestIntersection = {\n              intersectionX: intersection.intersectionX,\n              intersectionY: intersection.intersectionY,\n              intersectedRect: {\n                sx,\n                sy,\n                sw,\n                sh,\n              },\n            };\n          }\n\n          // ctx.fillStyle = \"blue\";\n          // ctx.beginPath();\n          // ctx.arc(\n          //   intersection.intersectionX,\n          //   intersection.intersectionY,\n          //   5,\n          //   0,\n          //   2 * Math.PI\n          // );\n          // ctx.fill();\n        }\n      }\n\n      this.nearestIntersection = nearestIntersection;\n\n      if (game.keys.has(\"leftClick\")) {\n        const bullet = new Bullet(\n          { x: this.startPos.x, y: this.startPos.y },\n          5\n        );\n        bullet.addComponents(\n          new Vector(norm.x * 1000, norm.y * 1000),\n          new CircleHitbox()\n        );\n\n        level.entities.push(bullet);\n\n        game.keys.delete(\"leftClick\");\n      }\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    if (this.startPos && this.aimPos) {\n      // ctx.save();\n\n      // ctx.restore();\n\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, this.gameWidth, this.gameHeight);\n\n      // ctx.save();\n\n      // ctx.translate(this.startPos.x, this.startPos.y);\n\n      // ctx.rotate(this.getDegrees(this.startPos, this.aimPos) + Math.PI / 2);\n      // // Create a circular clipping path\n      // ctx.beginPath();\n      // ctx.arc(0, 0, 250, 0, Math.PI * 2);\n      // ctx.clip();\n\n      // // draw background\n      // const lingrad = ctx.createLinearGradient(0, -300, 0, 0);\n      // lingrad.addColorStop(0, \"rgba(0,0,0,1)\");\n      // lingrad.addColorStop(0.1, \"rgba(0,0,0,0.9)\");\n      // lingrad.addColorStop(0.2, \"rgba(0,0,0,0.8)\");\n      // lingrad.addColorStop(0.3, \"rgba(0,0,0,0.7)\");\n      // lingrad.addColorStop(0.4, \"rgba(0,0,0,0.6)\");\n      // lingrad.addColorStop(0.5, \"rgba(0,0,0,0.5)\");\n      // lingrad.addColorStop(0.6, \"rgba(0,0,0,0.4)\");\n      // lingrad.addColorStop(0.7, \"rgba(0,0,0,0.3)\");\n      // lingrad.addColorStop(0.8, \"rgba(0,0,0,0.2)\");\n      // lingrad.addColorStop(0.9, \"rgba(0,0,0,0.1)\");\n      // lingrad.addColorStop(1, \"rgba(0,0,0,0)\");\n\n      // ctx.globalCompositeOperation = \"source-in\";\n      // ctx.fillStyle = lingrad;\n\n      // ctx.fill();\n\n      // ctx.restore();\n\n      ctx.save();\n\n      ctx.translate(this.startPos.x, this.startPos.y);\n      ctx.rotate(this.getDegrees(this.startPos, this.aimPos) + Math.PI / 2);\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-1600, -800);\n      ctx.lineTo(1600, -800);\n      ctx.clip();\n\n      // draw background\n      const lingrad = ctx.createLinearGradient(0, -800, 0, 0);\n      lingrad.addColorStop(0, \"rgba(0,0,0,1)\");\n      lingrad.addColorStop(0.1, \"rgba(0,0,0,0.9)\");\n      lingrad.addColorStop(0.2, \"rgba(0,0,0,0.8)\");\n      lingrad.addColorStop(0.3, \"rgba(0,0,0,0.7)\");\n      lingrad.addColorStop(0.4, \"rgba(0,0,0,0.6)\");\n      lingrad.addColorStop(0.5, \"rgba(0,0,0,0.5)\");\n      lingrad.addColorStop(0.6, \"rgba(0,0,0,0.4)\");\n      lingrad.addColorStop(0.7, \"rgba(0,0,0,0.3)\");\n      lingrad.addColorStop(0.8, \"rgba(0,0,0,0.2)\");\n      lingrad.addColorStop(0.9, \"rgba(0,0,0,0.1)\");\n      lingrad.addColorStop(1, \"rgba(0,0,0,0)\");\n      ctx.globalCompositeOperation = \"source-in\";\n      ctx.fillStyle = lingrad;\n      ctx.fill();\n\n      ctx.restore();\n\n      ctx.save();\n\n      ctx.fillStyle = \"orange\";\n      ctx.beginPath();\n      ctx.arc(this.startPos.x, this.startPos.y, 5, 0, 2 * Math.PI);\n      ctx.fill();\n\n      if (this.nearestIntersection) {\n        if (this.nearestIntersection.intersectedRect) {\n          const { intersectedRect } = this.nearestIntersection;\n          ctx.fillStyle = \"orange\";\n          ctx.fillRect(\n            intersectedRect.sx,\n            intersectedRect.sy,\n            intersectedRect.sw,\n            intersectedRect.sh\n          );\n        }\n\n        // draw the line\n        ctx.beginPath();\n        ctx.setLineDash([5, 15]);\n        ctx.moveTo(this.startPos.x, this.startPos.y);\n        ctx.lineTo(\n          this.nearestIntersection.intersectionX,\n          this.nearestIntersection.intersectionY\n        );\n        ctx.stroke();\n\n        // draw intersection dot\n        ctx.fillStyle = \"red\";\n        ctx.beginPath();\n        ctx.arc(\n          this.nearestIntersection.intersectionX,\n          this.nearestIntersection.intersectionY,\n          5,\n          0,\n          2 * Math.PI\n        );\n        ctx.fill();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  lineRect(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    rx: number,\n    ry: number,\n    rw: number,\n    rh: number\n  ) {\n    // check if the line has hit any of the rectangle's sides\n    // uses the Line/Line function below\n    const left = this.lineLine(x1, y1, x2, y2, rx, ry, rx, ry + rh);\n    const right = this.lineLine(x1, y1, x2, y2, rx + rw, ry, rx + rw, ry + rh);\n    const top = this.lineLine(x1, y1, x2, y2, rx, ry, rx + rw, ry);\n    const bottom = this.lineLine(x1, y1, x2, y2, rx, ry + rh, rx + rw, ry + rh);\n\n    const intersections: Array<{\n      intersectionX: number;\n      intersectionY: number;\n    }> = [];\n\n    if (left) intersections.push(left);\n    if (right) intersections.push(right);\n    if (top) intersections.push(top);\n    if (bottom) intersections.push(bottom);\n\n    return intersections;\n  }\n\n  lineLine(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    x3: number,\n    y3: number,\n    x4: number,\n    y4: number\n  ) {\n    // calculate the direction of the lines\n    const uA: number =\n      ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) /\n      ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n    const uB: number =\n      ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) /\n      ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n\n    // if uA and uB are between 0-1, lines are colliding\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n      // where the lines meet\n      const intersectionX: number = x1 + uA * (x2 - x1);\n      const intersectionY: number = y1 + uA * (y2 - y1);\n\n      return { intersectionX, intersectionY };\n    }\n    return null;\n  }\n\n  getDegrees(\n    startPos: { x: number; y: number },\n    mousePos: { x: number; y: number }\n  ) {\n    if (!mousePos) throw new Error(\"No mousePos\");\n\n    if (mousePos.y > startPos.y) {\n      if (mousePos.x > startPos.x) {\n        const angle = Math.atan(\n          Math.abs(mousePos.y - startPos.y) / Math.abs(mousePos.x - startPos.x)\n        );\n\n        return angle;\n      } else {\n        const angle =\n          Math.atan(\n            Math.abs(mousePos.x - startPos.x) /\n              Math.abs(mousePos.y - startPos.y)\n          ) +\n          Math.PI / 2;\n\n        return angle;\n      }\n    } else {\n      if (mousePos.x > startPos.x) {\n        const angle = -Math.atan(\n          Math.abs(mousePos.y - startPos.y) / Math.abs(mousePos.x - startPos.x)\n        );\n\n        return angle;\n      } else {\n        const angle =\n          -Math.atan(\n            Math.abs(mousePos.x - startPos.x) /\n              Math.abs(mousePos.y - startPos.y)\n          ) -\n          Math.PI / 2;\n\n        return angle;\n      }\n    }\n  }\n}\n","import Entity from \"./Entity\";\n\nexport default class Bullet extends Entity {\n  lifeLength = 5; // seconds\n\n  constructor(position: { x: number; y: number }, public radius: number) {\n    super(position, { width: radius * 2, height: radius * 2 });\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    // draw intersection dot\n    ctx.save();\n\n    ctx.fillStyle = \"red\";\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI);\n    ctx.fill();\n\n    ctx.restore();\n  }\n}\n","import Game from \"../game\";\nimport { System } from \"./System\";\nimport { Level } from \"../Level/Level\";\nimport Entity from \"../Entity/Entity\";\nimport { Player1 } from \"../Entity/Player1\";\nimport Wall from \"../Entity/Wall\";\nimport LightSource from \"../Component/LightSource\";\nimport { Rectangle } from \"../rectangle\";\nimport { Segment } from \"../segment\";\nimport { loadMap } from \"../load-map\";\nimport { calculateVisibility } from \"../visibility\";\nimport { Point } from \"../point\";\n\nexport default class LightsourceSystem extends System {\n  room: Rectangle | null = null;\n  lightSource: Point | null = null;\n  blocks: Rectangle[] = [];\n  walls: Segment[] = [];\n  visibility: Point[][] = [];\n\n  constructor() {\n    super();\n  }\n\n  appliesTo(entity: Entity) {\n    return entity instanceof Wall || entity.hasComponent(LightSource);\n  }\n\n  update(entities: Entity[], dt: number, level: Level, game: Game) {\n    const player = entities.find((entity) => entity instanceof Player1);\n    const walls = entities.filter((entity) => entity instanceof Wall);\n\n    if (!player) {\n      this.lightSource = null;\n      return;\n    }\n\n    // Setup scene\n    this.room = new Rectangle(0, 0, game.gameWidth, game.gameHeight);\n\n    this.walls = [];\n\n    this.blocks = walls.map(\n      (entity) =>\n        new Rectangle(\n          entity.position.x,\n          entity.position.y,\n          entity.size.width,\n          entity.size.height\n        )\n    );\n\n    // Test lightsource middle of map\n    this.lightSource = new Point(player.position.x, player.position.y);\n\n    const endpoints = loadMap(\n      this.room,\n      this.blocks,\n      this.walls,\n      this.lightSource\n    );\n    this.visibility = calculateVisibility(this.lightSource, endpoints);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    if (!this.lightSource || !this.room) return;\n\n    this.drawVisibilityTriangles(\n      ctx,\n      \"gray\",\n      this.lightSource,\n      this.visibility\n    );\n\n    for (const block of this.blocks) {\n      this.drawRectangle(ctx, \"blue\", block);\n    }\n\n    for (const wall of this.walls) {\n      this.drawSegment(ctx, \"red\", wall);\n    }\n  }\n\n  drawRectangle(\n    ctx: CanvasRenderingContext2D,\n    color: string,\n    rectangle: Rectangle\n  ) {\n    ctx.save();\n    ctx.strokeStyle = \"blue\";\n    ctx.strokeRect(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    ctx.restore();\n  }\n\n  drawSegment(ctx: CanvasRenderingContext2D, color: string, segment: Segment) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.strokeStyle = \"black\";\n    ctx.moveTo(segment.p1.x, segment.p1.y);\n    ctx.lineTo(segment.p2.x, segment.p2.y);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawVisibilityTriangles(\n    ctx: CanvasRenderingContext2D,\n    color: string,\n    lightSource: Point,\n    visibilityOutput: Point[][]\n  ) {\n    ctx.save();\n\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, this.room!.width, this.room!.height);\n\n    ctx.globalCompositeOperation = \"source-out\";\n\n    ctx.beginPath();\n\n    for (const points of visibilityOutput) {\n      ctx.moveTo(lightSource.x, lightSource.y);\n      ctx.lineTo(points[0].x, points[0].y);\n      ctx.lineTo(points[1].x, points[1].y);\n    }\n\n    ctx.clip();\n\n    ctx.fillStyle = \"transparent\";\n    ctx.fill();\n\n    ctx.restore();\n  }\n}\n","import CellEntity from \"./Cell\";\n\nexport default class Wall extends CellEntity {\n  constructor(\n    position: { x: number; y: number },\n    size: { width: number; height: number }\n  ) {\n    super(position, size);\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = \"#000\";\n    ctx.fillRect(\n      this.position.x,\n      this.position.y,\n      this.size.width,\n      this.size.height\n    );\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  }\n}\n","import Component from \"../Component/Component\";\nimport Entity from \"./Entity\";\n\nexport default class Cell extends Entity {\n  components: Component[] = [];\n\n  constructor(\n    position: { x: number; y: number },\n    size: { width: number; height: number }\n  ) {\n    super(position, size);\n  }\n\n  draw(ctx: CanvasRenderingContext2D): void {\n    // ctx.beginPath();\n    // ctx.fillStyle = \"#FFF\";\n    // ctx.fillRect(\n    //   this.position.x,\n    //   this.position.y,\n    //   this.size.width,\n    //   this.size.height\n    // );\n    // ctx.fill();\n    // ctx.closePath();\n  }\n}\n","import Component from \"./Component\";\n\nexport default class LightSource extends Component {\n  constructor() {\n    super();\n  }\n}\n","import { Point } from \"./point\";\nimport { Segment } from \"./segment\";\n\nexport class Rectangle {\n  constructor(\n    public x: number,\n    public y: number,\n    public width: number,\n    public height: number\n  ) {}\n\n  public getCorners() {\n    return {\n      nw: new Point(this.x, this.y),\n      sw: new Point(this.x, this.y + this.height),\n      ne: new Point(this.x + this.width, this.y),\n      se: new Point(this.x + this.width, this.y + this.height),\n    };\n  }\n\n  public getCornerSegments(): Segment[] {\n    const { nw, sw, ne, se } = this.getCorners();\n    return [\n      new Segment(nw.x, nw.y, ne.x, ne.y),\n      new Segment(nw.x, nw.y, sw.x, sw.y),\n      new Segment(ne.x, ne.y, se.x, se.y),\n      new Segment(sw.x, sw.y, se.x, se.y),\n    ];\n  }\n}\n","export class Point {\n  constructor(\n    public x: number,\n    public y: number,\n  ) {\n  }\n}\n","import { EndPoint } from \"./end-point\";\n\nexport class Segment {\n  public p1: EndPoint;\n  public p2: EndPoint;\n  public d: number = 0;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.p1 = new EndPoint(x1, y1);\n    this.p2 = new EndPoint(x2, y2);\n    this.p1.segment = this;\n    this.p2.segment = this;\n  }\n}\n","import { Point } from './point';\n\nexport class EndPoint extends Point {\n  public beginsSegment?: any;\n  public segment?: any;\n  public angle?: any;\n\n  constructor(\n    public x: number,\n    public y: number,\n  ) {\n    super(x, y);\n  }\n}\n","import { Segment } from './segment';\nimport { Rectangle } from './rectangle';\nimport { Point } from './point';\nimport { EndPoint } from './end-point';\n\nconst calculateEndPointAngles = (lightSource: Point, segment: Segment) => {\n  const { x, y } = lightSource;\n  const dx = 0.5 * (segment.p1.x + segment.p2.x) - x;\n  const dy = 0.5 * (segment.p1.y + segment.p2.y) - y;\n\n  segment.d = (dx * dx) + (dy * dy);\n  segment.p1.angle = Math.atan2(segment.p1.y - y, segment.p1.x - x);\n  segment.p2.angle = Math.atan2(segment.p2.y - y, segment.p2.x - x);\n};\n\nconst setSegmentBeginning = (segment: Segment) => {\n  let dAngle = segment.p2.angle - segment.p1.angle;\n\n  if (dAngle <= -Math.PI) {\n    dAngle += 2 * Math.PI;\n  }\n  if (dAngle > Math.PI) {\n    dAngle -= 2 * Math.PI;\n  }\n\n  segment.p1.beginsSegment = dAngle > 0;\n  segment.p2.beginsSegment = !segment.p1.beginsSegment;\n};\n\nconst processSegments = (lightSource: Point, segments: Segment[]) => {\n  for (const segment of segments) {\n    calculateEndPointAngles(lightSource, segment);\n    setSegmentBeginning(segment);\n  }\n\n  return segments;\n};\n\nexport function loadMap(room: Rectangle, blocks: Rectangle[], walls: Segment[], lightSource: Point): EndPoint[] {\n  const segments: Segment[] = [];\n  for (const segment of room.getCornerSegments()) {\n    segments.push(segment);\n  }\n  for (const block of blocks) {\n    for (const segment of block.getCornerSegments()) {\n      segments.push(segment);\n    }\n  }\n  for (const segment of walls) {\n    segments.push(segment);\n  }\n  const endPoints: EndPoint[] = [];\n  for (const segment of processSegments(lightSource, segments)) {\n    endPoints.push(segment.p1, segment.p2);\n  }\n  return endPoints;\n}\n","import { lineIntersection } from \"./line-intersection\";\nimport { endpointCompare } from \"./endpoint-compare\";\nimport { segmentInFrontOf } from \"./segment-in-front-of\";\nimport { Point } from \"./point\";\nimport { EndPoint } from \"./end-point\";\nimport { Segment } from \"./segment\";\n\nfunction getTrianglePoints(\n  origin: Point,\n  angle1: number,\n  angle2: number,\n  segment: Segment\n): Point[] {\n  const p1 = origin;\n  const p2 = new Point(\n    origin.x + Math.cos(angle1),\n    origin.y + Math.sin(angle1)\n  );\n  const p3 = new Point(0, 0);\n  const p4 = new Point(0, 0);\n\n  if (segment) {\n    p3.x = segment.p1.x;\n    p3.y = segment.p1.y;\n    p4.x = segment.p2.x;\n    p4.y = segment.p2.y;\n  } else {\n    p3.x = origin.x + Math.cos(angle1) * 200;\n    p3.y = origin.y + Math.sin(angle1) * 200;\n    p4.x = origin.x + Math.cos(angle2) * 200;\n    p4.y = origin.y + Math.sin(angle2) * 200;\n  }\n\n  const pBegin = lineIntersection(p3, p4, p1, p2);\n\n  p2.x = origin.x + Math.cos(angle2);\n  p2.y = origin.y + Math.sin(angle2);\n\n  const pEnd = lineIntersection(p3, p4, p1, p2);\n\n  return [pBegin, pEnd];\n}\n\nexport function calculateVisibility(\n  origin: Point,\n  endpoints: EndPoint[]\n): Point[][] {\n  const openSegments = [];\n  const output = [];\n  let beginAngle = 0;\n\n  endpoints.sort(endpointCompare);\n\n  for (let pass = 0; pass < 2; pass += 1) {\n    for (const endpoint of endpoints) {\n      const openSegment = openSegments[0];\n\n      if (endpoint.beginsSegment) {\n        let index = 0;\n        let segment = openSegments[index];\n        while (segment && segmentInFrontOf(endpoint.segment, segment, origin)) {\n          index += 1;\n          segment = openSegments[index];\n        }\n\n        if (!segment) {\n          openSegments.push(endpoint.segment);\n        } else {\n          openSegments.splice(index, 0, endpoint.segment);\n        }\n      } else {\n        const index = openSegments.indexOf(endpoint.segment);\n        if (index > -1) {\n          openSegments.splice(index, 1);\n        }\n      }\n\n      if (openSegment !== openSegments[0]) {\n        if (pass === 1) {\n          const trianglePoints = getTrianglePoints(\n            origin,\n            beginAngle,\n            endpoint.angle,\n            openSegment\n          );\n          output.push(trianglePoints);\n        }\n        beginAngle = endpoint.angle;\n      }\n    }\n  }\n\n  return output;\n}\n","import { Point } from './point';\n\nexport function lineIntersection(point1: Point, point2: Point, point3: Point, point4: Point): Point {\n  const s = (\n    (point4.x - point3.x) * (point1.y - point3.y) -\n    (point4.y - point3.y) * (point1.x - point3.x)\n  ) / (\n      (point4.y - point3.y) * (point2.x - point1.x) -\n      (point4.x - point3.x) * (point2.y - point1.y)\n    );\n\n  return new Point(\n    point1.x + s * (point2.x - point1.x),\n    point1.y + s * (point2.y - point1.y),\n  );\n}\n","import { EndPoint } from './end-point';\n\nexport function endpointCompare(pointA: EndPoint, pointB: EndPoint) {\n  if (pointA.angle > pointB.angle) {\n    return 1;\n  }\n  if (pointA.angle < pointB.angle) {\n    return -1;\n  }\n  if (!pointA.beginsSegment && pointB.beginsSegment) {\n    return 1;\n  }\n  if (pointA.beginsSegment && !pointB.beginsSegment) {\n    return -1;\n  }\n  return 0;\n}\n","import { Point } from \"./point\";\nimport { Segment } from \"./segment\";\n\nconst leftOf = (segment: Segment, point: Point) => {\n  const cross =\n    (segment.p2.x - segment.p1.x) * (point.y - segment.p1.y) -\n    (segment.p2.y - segment.p1.y) * (point.x - segment.p1.x);\n  return cross < 0;\n};\n\nconst interpolate = (pointA: Point, pointB: Point, f: number) => {\n  return new Point(\n    pointA.x * (1 - f) + pointB.x * f,\n    pointA.y * (1 - f) + pointB.y * f\n  );\n};\n\nexport const segmentInFrontOf = (\n  segmentA: Segment,\n  segmentB: Segment,\n  relativePoint: Point\n) => {\n  const A1 = leftOf(segmentA, interpolate(segmentB.p1, segmentB.p2, 0.01));\n  const A2 = leftOf(segmentA, interpolate(segmentB.p2, segmentB.p1, 0.01));\n  const A3 = leftOf(segmentA, relativePoint);\n  const B1 = leftOf(segmentB, interpolate(segmentA.p1, segmentA.p2, 0.01));\n  const B2 = leftOf(segmentB, interpolate(segmentA.p2, segmentA.p1, 0.01));\n  const B3 = leftOf(segmentB, relativePoint);\n\n  if (B1 === B2 && B2 !== B3) {\n    return true;\n  }\n  if (A1 === A2 && A2 === A3) {\n    return true;\n  }\n  if (A1 === A2 && A2 !== A3) {\n    return false;\n  }\n  if (B1 === B2 && B2 === B3) {\n    return false;\n  }\n\n  return false;\n};\n"],"names":[],"version":3,"file":"index.b7a05eb9.js.map","sourceRoot":"/__parcel_source_root/"}